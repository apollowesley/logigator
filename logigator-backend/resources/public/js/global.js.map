{"version":3,"sources":["global.js","bem.js"],"names":["Bem","bemClass","node","classList","length","i","includes","element","querySelector","concat","setState","state","active","add","remove","hasState","contains","toggleState","toggle","hasModifier","modifier","data","getAttribute","hasData","hasAttribute","siteHeaderPartial","settingsDropdown","background","dropdownOpen","addEventListener","document"],"mappings":"AAAA,aCAA,IAAAA,IAAA,CAMAC,SANA,SAMAC,GACA,GAAA,IAAAA,EAAAC,UAAAC,OACA,OAAAF,EAAAC,UAAA,GAEA,IAAA,IAAAE,EAAA,EAAAA,EAAAH,EAAAC,UAAAC,OAAAC,IACA,IAAAH,EAAAC,UAAAE,GAAAC,SAAA,MACA,OAAAJ,EAAAC,UAAAE,IAYAE,QAxBA,SAwBAL,EAAAK,GACA,IAAAN,EAAAD,IAAAC,SAAAC,GACA,OAAAA,EAAAM,cAAA,IAAAC,OAAAR,EAAA,MAAAQ,OAAAF,KAQAG,SAlCA,SAkCAR,EAAAS,EAAAC,GACAA,EACAV,EAAAC,UAAAU,IAAA,MAAAJ,OAAAE,IAEAT,EAAAC,UAAAW,OAAA,MAAAL,OAAAE,KASAI,SA/CA,SA+CAb,EAAAS,GACA,OAAAT,EAAAC,UAAAa,SAAA,MAAAP,OAAAE,KAOAM,YAvDA,SAuDAf,EAAAS,GACAT,EAAAC,UAAAe,OAAA,MAAAT,OAAAE,KAQAQ,YAhEA,SAgEAjB,EAAAkB,GACA,IAAAnB,EAAAD,IAAAC,SAAAC,GACA,OAAAA,EAAAC,UAAAa,SAAA,GAAAP,OAAAR,EAAA,MAAAQ,OAAAW,KAQAC,KA1EA,SA0EAnB,EAAAmB,GACA,OAAAnB,EAAAoB,aAAA,QAAAb,OAAAY,KAQAE,QAnFA,SAmFArB,EAAAmB,GACA,OAAAnB,EAAAsB,aAAA,QAAAf,OAAAY,MDhFA,SAAAI,kBAAAvB,GACA,IAAAwB,EAAAxB,EAAAM,cAAA,8BACAmB,EAAA3B,IAAAO,QAAAL,EAAA,uBAEA0B,GAAA,EACA5B,IAAAO,QAAAL,EAAA,oBAAA2B,iBAAA,SAAA,WACAD,GAAAA,EACA5B,IAAAU,SAAAgB,EAAA,OAAAE,GACA5B,IAAAU,SAAAiB,EAAA,QAAAC,MAGAD,EAAAE,iBAAA,SAAA,WACAD,GAAA,EACA5B,IAAAU,SAAAgB,EAAA,OAAAE,GACA5B,IAAAU,SAAAiB,EAAA,QAAAC,MAGAH,kBAAAK,SAAAtB,cAAA","file":"global.js","sourcesContent":["// PARTIALS ---------------------------------------------------------------------------------------\n/**\n * @param {HTMLElement} node\n */\nfunction siteHeaderPartial(node) {\n\tconst settingsDropdown = node.querySelector('.partial-settings-dropdown');\n\tconst background = Bem.element(node, 'dropdown-background');\n\n\tlet dropdownOpen = false;\n\tBem.element(node, 'dropdown-trigger').addEventListener('click', () => {\n\t\tdropdownOpen = !dropdownOpen;\n\t\tBem.setState(settingsDropdown, 'open', dropdownOpen);\n\t\tBem.setState(background, 'shown', dropdownOpen);\n\t});\n\n\tbackground.addEventListener('click', () => {\n\t\tdropdownOpen = false;\n\t\tBem.setState(settingsDropdown, 'open', dropdownOpen);\n\t\tBem.setState(background, 'shown', dropdownOpen);\n\t});\n}\nsiteHeaderPartial(document.querySelector('.partial-site-header'));\n\n// ------------------------------------------------------------------------------------------------\n","const Bem = {\n\n    /**\n     * @param {Element} node\n     * @returns {string}\n     */\n    bemClass(node) {\n        if (node.classList.length === 1) {\n            return node.classList[0];\n        } else {\n            for (let i = 0; i < node.classList.length; i++) {\n                if (!node.classList[i].includes('--')) {\n                    return node.classList[i];\n                }\n            }\n            return undefined;\n        }\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} element\n     * @returns {Element}\n     */\n    element(node, element) {\n        const bemClass = Bem.bemClass(node);\n        return node.querySelector(`.${bemClass}__${element}`);\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} state\n     * @param {boolean} active\n     */\n    setState(node, state, active) {\n        if (active) {\n            node.classList.add(`is-${state}`);\n        } else {\n            node.classList.remove(`is-${state}`);\n        }\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} state\n     * @returns {boolean}\n     */\n    hasState(node, state) {\n        return node.classList.contains(`is-${state}`);\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} state\n     */\n    toggleState(node, state) {\n        node.classList.toggle(`is-${state}`);\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} modifier\n     * @returns {boolean}\n     */\n    hasModifier(node, modifier) {\n        const bemClass = Bem.bemClass(node);\n        return node.classList.contains(`${bemClass}--${modifier}`);\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} data\n     * @returns {string}\n     */\n    data(node, data) {\n        return node.getAttribute(`data-${data}`);\n    },\n\n    /**\n     * @param {Element} node\n     * @param {string} data\n     * @returns {boolean}\n     */\n    hasData(node, data) {\n        return node.hasAttribute(`data-${data}`);\n    }\n};\n"]}