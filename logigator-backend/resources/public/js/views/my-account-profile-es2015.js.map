{"version":3,"sources":["my-account-profile-es2015.js"],"names":["imageChangeHandling","node","cropper","replaceImage","file","fileReader","FileReader","readAsDataURL","onload","readEvent","replace","target","result","document","addEventListener","e","popupNode","detail","querySelector","fileInput","Bem","element","uploadContainer","dragEvent","evt","state","preventDefault","stopPropagation","setState","click","event","dataTransfer","files","length","Cropper","aspectRatio","setup"],"mappings":"AAAA,aAAA,SAASA,sBAER,IAAIC,EACAC,EAkDJ,SAASC,EAAaC,GACrB,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcH,GACzBC,EAAWG,OAASC,IACnBP,EAAQQ,QAAQD,EAAUE,OAAOC,SApDnCC,SAASC,iBAAiB,eAAgBC,IACzC,MAAMC,EAAYD,EAAEE,OAAOC,cAAc,+BACpCF,IAGAf,IACJA,EAAOe,EAKT,WACC,MAAMG,EAAYC,IAAIC,QAAQpB,EAAM,QAC9BqB,EAAkBF,IAAIC,QAAQpB,EAAM,oBAuB1C,SAASsB,EAAUC,EAAKC,GACvBD,EAAIE,iBACJF,EAAIG,kBACJP,IAAIQ,SAASN,EAAiB,WAAYG,GAxB3CH,EAAgBR,iBAAiB,QAAS,IAAMK,EAAUU,SAC1DP,EAAgBR,iBAAiB,YAAaU,GAAOD,EAAUC,GAAK,IACpEF,EAAgBR,iBAAiB,YAAaU,GAAOD,EAAUC,GAAK,IACpEF,EAAgBR,iBAAiB,WAAYU,GAAOD,EAAUC,GAAK,IACnEF,EAAgBR,iBAAiB,UAAWU,GAAOD,EAAUC,GAAK,IAClEF,EAAgBR,iBAAiB,WAAYU,GAAOD,EAAUC,GAAK,IACnEF,EAAgBR,iBAAiB,YAAaU,GAAOD,EAAUC,GAAK,IACpEF,EAAgBR,iBAAiB,OAAQgB,IACxCA,EAAMJ,iBACNI,EAAMH,kBACNP,IAAIQ,SAASN,EAAiB,YAAY,GACtCQ,EAAMC,aAAaC,OACtB7B,EAAa2B,EAAMC,aAAaC,MAAM,MAGxCb,EAAUL,iBAAiB,SAAUgB,IAChCA,EAAMnB,OAAOqB,OAASF,EAAMnB,OAAOqB,MAAMC,OAAS,GACrD9B,EAAa2B,EAAMnB,OAAOqB,MAAM,MAWlC9B,EAAU,IAAIgC,QAAQd,IAAIC,QAAQpB,EAAM,OAAQ,CAC/CkC,YAAa,IArCbC,OAkDHpC","file":"my-account-profile-es2015.js","sourcesContent":["function imageChangeHandling() {\n\n\tlet node;\n\tlet cropper;\n\n\tdocument.addEventListener('popup-opened', e => {\n\t\tconst popupNode = e.detail.querySelector('.partial-change-image-popup');\n\t\tif (!popupNode) {\n\t\t\treturn;\n\t\t}\n\t\tif (!node) {\n\t\t\tnode = popupNode;\n\t\t\tsetup();\n\t\t}\n\t});\n\n\tfunction setup() {\n\t\tconst fileInput = Bem.element(node, 'file');\n\t\tconst uploadContainer = Bem.element(node, 'upload-container');\n\n\t\tuploadContainer.addEventListener('click', () => fileInput.click());\n\t\tuploadContainer.addEventListener('dragstart', evt => dragEvent(evt, true));\n\t\tuploadContainer.addEventListener('dragenter', evt => dragEvent(evt, true));\n\t\tuploadContainer.addEventListener('dragover', evt => dragEvent(evt, true));\n\t\tuploadContainer.addEventListener('dragend', evt => dragEvent(evt, false));\n\t\tuploadContainer.addEventListener('dragexit', evt => dragEvent(evt, false));\n\t\tuploadContainer.addEventListener('dragleave', evt => dragEvent(evt, false));\n\t\tuploadContainer.addEventListener('drop', event => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tBem.setState(uploadContainer, 'dragging', false);\n\t\t\tif (event.dataTransfer.files) {\n\t\t\t\treplaceImage(event.dataTransfer.files[0]);\n\t\t\t}\n\t\t});\n\t\tfileInput.addEventListener('change', event => {\n\t\t\tif (event.target.files && event.target.files.length > 0) {\n\t\t\t\treplaceImage(event.target.files[0]);\n\t\t\t}\n\t\t});\n\n\t\tfunction dragEvent(evt, state) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t\tBem.setState(uploadContainer, 'dragging', state);\n\t\t}\n\n\t\t// eslint-disable-next-line no-undef\n\t\tcropper = new Cropper(Bem.element(node, 'img'), {\n\t\t\taspectRatio: 1\n\t\t});\n\t}\n\n\tfunction replaceImage(file) {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.readAsDataURL(file);\n\t\tfileReader.onload = readEvent => {\n\t\t\tcropper.replace(readEvent.target.result);\n\t\t};\n\t}\n\n}\nimageChangeHandling();\n"]}